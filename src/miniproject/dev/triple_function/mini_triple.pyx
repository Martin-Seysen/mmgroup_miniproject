# cython: language_level=3

from __future__ import absolute_import, division, print_function
from __future__ import  unicode_literals

from libc.stdint cimport uint32_t, uint16_t, uint8_t

from libc.stdint cimport uint64_t as uint_std_t



cdef extern from "triple_function.h":
    uint_std_t triple_function(uint_std_t k)


def uint_triple(uint_std_t k):
    """Python wrapper of a C function that triples an integer ``k``.

    The function returns  3 * ``k``.

    For small values ``k`` the function reads the result from a
    table which has been generated by a python script. For large 
    values ``k`` it uses a function from a shared library.

    Both, the table and the shared library have been created in
    a prior step of the build process.
    """
    cdef uint_std_t k1 = k
    return int(triple_function(k1))


